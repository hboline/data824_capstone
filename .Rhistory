library(tidyverse)
library(ggplot2)
data <- read.csv("./data/Gemini_BTCUSD_2022_1min.csv",
skip = 1, header = TRUE)
data <- data %>%
mutate(Date = as.POSIXct(Date, format = "%Y-%m-%d %H:%M:%OS"))
setwd("D:/data824_capstone")
?PCA
# load libraries ----
library(shiny)
library(shinyWidgets)
library(tidyverse)
library(plotly)
library(shinydashboard)
library(corrplot)
library(modelr)
library(broom)
library(FactoMineR)
library(factoextra)
library(cluster)
library(scales)
# load and clean data ----
data <- read.csv("abalone.csv", header = TRUE)
data <- data %>%
mutate(sex = case_when(sex == "M" ~ "male",
sex == "F" ~ "female",
sex == "I" ~ "infant")) %>%
mutate(sex = factor(sex, levels = c("male", "female", "infant")),
across(.cols = colnames(.)[2:8], ~ .x*200),
age = rings + 1) %>%
filter(height < 60) %>%
select(-rings)
var.names <- setNames(colnames(data), c("Sex", "Length", "Diameter", "Height", "Whole Weight", "Shucked Weight", "Viscera Weight", "Shell Weight", "Age"))
?PCA
m <- PCA(data, scale.unit = TRUE, ncp = 2, graph = FALSE)
m <- PCA(data[-1], scale.unit = TRUE, ncp = 2, graph = FALSE)
?fviz_pca
cmap <- rainbow(n = length(levels(as.factor(data$age))))
fviz_pca(m, repel = TRUE, palette = cmap, col.ind = data$age, col.var = "black")
fviz_pca(m, repel = TRUE, palette = cmap, col.ind = data$age, col.var = "black", label = "none")
fviz_pca(m, repel = TRUE, palette = cmap, gradient.cols = data$age, col.var = "black", label = "none")
fviz_pca(m, repel = TRUE, col.ind = data$age, col.var = "black", label = "none", palette = rainbow(9))
fviz_pca(m, repel = TRUE, habillage = data$age, col.var = "black", label = "none", palette = rainbow(9))
fviz_pca(m, repel = TRUE, palette = cmap, col.var = data$age, label = "none")
fviz_pca(m, repel = TRUE, col.ind = data$age, col.var = "black", label = "none", palette = rainbow(9))
fviz_pca(m, repel = TRUE, col.ind = data$age, col.var = "black", label = "var", palette = rainbow(9))
cmap <- palette(rainbow(n = length(levels(as.factor(data$age)))))
fviz_pca(m, repel = TRUE, col.ind = data$age, col.var = "black", label = "var", palette = cmap)
fviz_pca(m, repel = TRUE, col.ind = data$age, col.var = "black", label = "var", palette = cmap) + scale_color_viridis_c()
fviz_pca(m, repel = TRUE, col.ind = data$age, col.var = "black", label = "var", palette = cmap) + scale_color_viridis_d()
?scale_color_gradientn
fviz_pca(m, repel = TRUE, col.ind = data$age, col.var = "black", label = "var", palette = cmap) + scale_color_gradientn(colors = rainbow(10))
fviz_pca(m, repel = TRUE, col.ind = data$age, col.var = "black", label = "var", palette = cmap) + scale_color_gradientn(colors = rainbow(length(levels(as.factor(data$age)))))
CA(data)
MCA(data)
runApp()
runApp()
runApp()
runApp()
m
m$ind
View(m$ind)
View(m$ind$coord)
runApp()
data[,c(-1,-9)]
runApp()
c("A" = 1)
names(c("A" = 1))
x <- c(1)
names(x) <- "A"
x
?c
?vector
?fviz_pca
runApp()
runApp()
runApp()
x <- TRUE
if_else(x, 1:5, 1:4)
if_else(x, c(1:5), c(1:4))
if_else(x, 1, 2)
if_else(x, vector(1:5), vector(1:4))
if_else(x, seq(1,5), seq(1,4))
if_else(x, 5, 4)
(if (x) { 1:5 } else { 1:4})
(if (x){1:5} else {1:4})[-3]
runApp()
runApp()
m
m$eig
runApp()
m
View(m$var)
View(m$var$cor)
runApp()
runApp()
runApp()
runApp()
m
m$var$cos2
m <- PCA(data[-1], ncp = 8, graph = FALSE)
View(m$var$cor)
View(m$var)
View(m)
runApp()
View(m$var$coord)
View(m$ind$coord)
View(m$ind$cor)
View(m)
signif(data, 5)
data %>% signif(5)
data %>% mutate(across(.fns = signif, 5))
data %>% mutate(across(.fns = signif, 2)) %>% View
data %>% mutate(across(.fns = round, 2)) %>% View
data %>% mutate(across(which(is.numeric(.)), signif, 2)) %>% View
data %>% mutate(across(which(is.numeric)), round, 2)
data %>% mutate(across(which(is.numeric(.))), round, 2)
data %>% mutate( across( which( is.numeric(.) ), ~ signif(.x, 2) ) )
data %>% mutate( across( which( is.numeric(.) ), ~ .x * 200 ) )
data %>% mutate( across( which( is.numeric(.)), ~ .x + 100))
is.numeric(data)
data %>% mutate( across( which( is.numeric(across(.))), ~ .x + 100))
data %>% mutate( across( which( across(.fns = is.numeric)), ~ .x + 100))
data %>% mutate( across( which( sapply(., is.numeric) ), ~ .x + 100))
data %>% mutate( across( which( sapply(., is.numeric) ), signif, 2))
runApp()
m
View(m$var$contrib)
View(m$call)
View(m$call$centre)
m$call$centre
m$call$ecart.type
m$var$cos2
runApp()
